{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistic.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedBackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","components/Feedback/Feedback.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedBackOptions","options","onLeaveFeedback","className","s","feedback__controls","map","element","index","feedback__button","type","onClick","slice","toUpperCase","Statistic","good","neutral","bad","total","percent","statisic__list","Notification","message","notification","Section","title","children","container","container__title","Feedback","state","props","initialValue","option","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","stateArray","Object","keys","Statistics","Component","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,mBAAqB,4CAA4C,iBAAmB,4C,gBCAtGD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,iBAAmB,oC,kBCA5ED,EAAOC,QAAU,CAAC,eAAiB,oC,gBCAnCD,EAAOC,QAAU,CAAC,aAAe,qC,mKCwBlBC,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKC,UAAWC,IAAEC,mBAAlB,SACGJ,EAAQK,KAAI,SAACC,EAASC,GAAV,OACX,wBACEL,UAAWC,IAAEK,iBAEbC,KAAK,SACLC,QAAS,kBAAMT,EAAgBK,IAJjC,SAMGA,EAAQK,MAAM,EAAG,GAAGC,cAAgBN,EAAQK,MAAM,IANrD,UAEUJ,EAAQ,U,iBCYTM,EAlBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,QAA9B,OAChB,qBAAIhB,UAAWC,IAAEgB,eAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,W,iBCEWE,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,qBAAKnB,UAAWC,IAAEmB,aAAlB,SAAiCD,K,gBCWpBE,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASvB,UAAWC,IAAEuB,UAAtB,UACE,oBAAIxB,UAAWC,IAAEwB,iBAAjB,SAAoCH,IACnCC,MCDCG,E,4MAMJC,MAAQ,CACNf,KAAM,EAAKgB,MAAMC,aACjBhB,QAAS,EACTC,IAAK,G,EAGPf,gBAAkB,SAAA+B,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAASE,EAAUF,GAAU,O,EAIlCG,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQf,KAAR,EAAcE,IAAd,EAAmBD,S,EAIrBqB,gCAAkC,WAChC,IAAQtB,EAAS,EAAKe,MAAdf,KACFG,EAAQ,EAAKkB,qBACnB,OAAOlB,EAAQoB,KAAKC,MAAOxB,EAAOG,EAAS,KAAO,G,4CAGpD,WACE,MAA+BsB,KAAKV,MAA5Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQsB,KAAKJ,qBACbjB,EAAUqB,KAAKH,kCACfI,EAAaC,OAAOC,KAAKH,KAAKV,OAEpC,OACE,qCACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACExB,QAASwC,EACTvC,gBAAiBsC,KAAKtC,oBAIf,IAAVgB,EACC,cAAC,EAAD,CAASO,MAAM,aAAf,SACE,cAACmB,EAAD,CACE7B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,QAASA,MAIb,cAAC,EAAD,CAAcG,QAAQ,6B,GAvDTuB,aAAjBhB,EACGiB,aAAe,CAEpBd,aAAc,GA2DHH,QCxDAkB,E,4JANb,WAEE,OAAO,cAAC,EAAD,CAAUf,aAAc,Q,GALjBa,aCSHG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.250a6065.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__controls\":\"FeedbackOptions_feedback__controls__3NfPl\",\"feedback__button\":\"FeedbackOptions_feedback__button__1Q-5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__37ABw\",\"container__title\":\"Section_container__title__3lS-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisic__list\":\"Statistic_statisic__list__3dgsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\"};","import React from 'react';\r\nimport s from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst FeedBackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={s.feedback__controls}>\r\n    {options.map((element, index) => (\r\n      <button\r\n        className={s.feedback__button}\r\n        key={`${index + 1}`}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(element)}\r\n      >\r\n        {element.slice(0, 1).toUpperCase() + element.slice(1)}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedBackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedBackOptions;","import React from 'react';\r\nimport s from './Statistic.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistic = ({ good, neutral, bad, total, percent }) => (\r\n  <ul className={s.statisic__list}>\r\n    <li>Good: {good}</li>\r\n    <li>Neutral: {neutral}</li>\r\n    <li>Bad: {bad}</li>\r\n    <li>Total: {total}</li>\r\n    <li>Positive feedback: {percent}%</li>\r\n  </ul>\r\n);\r\n\r\nStatistic.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number,\r\n  percent: PropTypes.number,\r\n};\r\n\r\nexport default Statistic;","import React from 'react';\r\nimport s from './Notification.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <div className={s.notification}>{message}</div>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={s.container}>\r\n    <h2 className={s.container__title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport FeedBackOptions from '../FeedbackOptions/FeedBackOptions';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Notification from '../Notification/Notification';\r\nimport Section from '../Section/Section';\r\n\r\nclass Feedback extends Component {\r\n  static defaultProps = {\r\n\r\n    initialValue: 0,\r\n  };\r\n\r\n  state = {\r\n    good: this.props.initialValue,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = option => {\r\n    this.setState(prevState => ({\r\n      [option]: prevState[option] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, bad, neutral } = this.state;\r\n    return good + bad + neutral;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    return total ? Math.floor((good / total) * 100) : 0;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const percent = this.countPositiveFeedbackPercentage();\r\n    const stateArray = Object.keys(this.state);\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedBackOptions\r\n            options={stateArray}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n\r\n        {total !== 0 ? (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              percent={percent}\r\n            />\r\n          </Section>\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;","import React, { Component } from 'react';\nimport Feedback from './components/Feedback';\n\nclass App extends Component {\n\n\n  render() {\n\n    return <Feedback initialValue={0} />;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}